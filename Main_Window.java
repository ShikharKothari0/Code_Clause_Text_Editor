/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codeclause_text.editor.project;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author HP
 */
public class Main_Window extends javax.swing.JFrame {
    
    public Main_Window() {
        
        initComponents();
        setTitle("Text Editor");
        ImageIcon icon=new ImageIcon(getClass().getResource("text-editor.png"));// Icon Source: www.flaticon.com
        setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        NewOption = new javax.swing.JMenuItem();
        OpenOption = new javax.swing.JMenuItem();
        SaveOption = new javax.swing.JMenuItem();
        PrintOption = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        CutOption = new javax.swing.JMenuItem();
        CopyOption = new javax.swing.JMenuItem();
        PasteOption = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextArea.setColumns(20);
        TextArea.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        jMenu1.setText("File");

        NewOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NewOption.setText("New");
        NewOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewOptionActionPerformed(evt);
            }
        });
        jMenu1.add(NewOption);

        OpenOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenOption.setText("Open");
        OpenOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenOptionActionPerformed(evt);
            }
        });
        jMenu1.add(OpenOption);

        SaveOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveOption.setText("Save");
        SaveOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveOptionActionPerformed(evt);
            }
        });
        jMenu1.add(SaveOption);

        PrintOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        PrintOption.setText("Print");
        PrintOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintOptionActionPerformed(evt);
            }
        });
        jMenu1.add(PrintOption);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        CutOption.setText("Cut");
        CutOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutOptionActionPerformed(evt);
            }
        });
        jMenu2.add(CutOption);

        CopyOption.setText("Copy");
        CopyOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyOptionActionPerformed(evt);
            }
        });
        jMenu2.add(CopyOption);

        PasteOption.setText("Paste");
        PasteOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteOptionActionPerformed(evt);
            }
        });
        jMenu2.add(PasteOption);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewOptionActionPerformed
        TextArea.setText(null);
    }//GEN-LAST:event_NewOptionActionPerformed

    private void SaveOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveOptionActionPerformed
        JFileChooser chooser=new JFileChooser();
        FileNameExtensionFilter TextFile=new FileNameExtensionFilter("Only Text Files (.txt)", "txt"); // to ensure only
        chooser.setAcceptAllFileFilterUsed(false);                                                                               // textfiles are shown to the user    
        chooser.addChoosableFileFilter(TextFile);                                                                              // in the save dialog box   
        int action=chooser.showSaveDialog(null); //To check is the user has clicked on the save button or not, we save the button click value in "action" variable and then later on check its value to run the intended code
        if(action!=JFileChooser.APPROVE_OPTION){
            return; // meaning that the user has niot clicked on the save button
        } else{
            String filename=chooser.getSelectedFile().getAbsolutePath();
            if(!filename.contains(".txt")){
                filename=filename+".txt";    //   If the user hasn't included the ".txt" extension to the filename than iut willbe added
                try {
                    BufferedWriter bw=new BufferedWriter(new FileWriter(filename));
                    TextArea.write(bw);            // Writing the file
                     } catch (IOException ex) {
                    Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_SaveOptionActionPerformed

    private void OpenOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenOptionActionPerformed
         JFileChooser chooser=new JFileChooser();
         FileNameExtensionFilter TextFile=new FileNameExtensionFilter("Only Text Files (.txt)", "txt"); // to ensure only
         chooser.setAcceptAllFileFilterUsed(false);                                                                               // textfiles are shown to the user
         chooser.addChoosableFileFilter(TextFile);                                                                              // in the open dialog box 
         int action=chooser.showOpenDialog(null);
         if(action!=JFileChooser.APPROVE_OPTION){
             return; 
         }else{
             try {
                    BufferedReader br=new BufferedReader(new FileReader(chooser.getSelectedFile()));
                    TextArea.read(br,null);                            // Reading the file
                     } catch (IOException ex) {
                    Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
    }//GEN-LAST:event_OpenOptionActionPerformed

    private void PrintOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintOptionActionPerformed
        try {
            TextArea.print();
        } catch (PrinterException ex) {
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PrintOptionActionPerformed

    private void CutOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutOptionActionPerformed
        TextArea.cut();
    }//GEN-LAST:event_CutOptionActionPerformed

    private void CopyOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyOptionActionPerformed
        TextArea.copy();
    }//GEN-LAST:event_CopyOptionActionPerformed

    private void PasteOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteOptionActionPerformed
        TextArea.paste();
    }//GEN-LAST:event_PasteOptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CopyOption;
    private javax.swing.JMenuItem CutOption;
    private javax.swing.JMenuItem NewOption;
    private javax.swing.JMenuItem OpenOption;
    private javax.swing.JMenuItem PasteOption;
    private javax.swing.JMenuItem PrintOption;
    private javax.swing.JMenuItem SaveOption;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
